{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","toFixed","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","setInterval","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bc65bd1a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'    //Link - to is not working...  (use for change without page reload) video #16\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href='#'>Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n              </li> */}\r\n\r\n              {/* <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                  <li><hr className=\"dropdown-divider\" /></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode </label>\r\n            </div>\r\n            <form className=\"d-flex mx-5 my-1\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title Here',\r\n  aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  \r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase !!\", \"success\");\r\n    }\r\n    \r\n    const handleLwClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase !!\", \"success\");\r\n    }\r\n    \r\n    const handleClClick = () =>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared !!\", \"success\");\r\n    }\r\n    \r\n    const handleRESClick = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces removed !!\", \"success\");\r\n    }\r\n    \r\n    const handleCpClick = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard !!\", \"success\");\r\n    }\r\n    \r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n  \r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n                <h1 className='my-2'>Enter the text here...</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea className='form-control' value={text} style={{backgroundColor: props.mode==='light'?'white':'#101f3e', color: props.mode==='dark'?'white':'black'}}  onChange={handleOnChange} id=\"myBox\" rows=\"8\" placeholder='Enter text here...'></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLwClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleRESClick}>Remove Extra Space</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCpClick}>Copy Text</button>\r\n            </div>\r\n            <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n                <h1 className='my-3'>Your text summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{(0.008 * text.split(\" \").length).toFixed(3)} Minutes to read</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null); \n    }, 1500);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#101f3e';\n      showAlert(\"Dark mode has been enabled !!\", \"success\");\n      setInterval(() => {\n        document.title = \"Amazing...\"\n      }, 1000);\n      setInterval(() => {\n        document.title = \"Wow...\"\n      }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled !!\", \"success\");\n    }\n  }\n  return (\n    <>     \n      <Navbar title=\"my_react_01\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n      {/* <BrowserRouter>  \n        <Routes>\n          <Route exact path=\"/about\" element={<About mode={mode}/>} />\n          <Route exact path=\"/\" element={<TextForm mode={mode} showAlert={showAlert}/>}/>\n        </Routes>\n      </BrowserRouter> */}\n      <TextForm mode={mode} showAlert={showAlert}/>\n      <div className=\"container my-5\">\n      <Alert alert={alert}/>\n      </div>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}